---
jobs:
  - name: build-bosh-cli-docker-image
    public: true
    serial: true
    plan:
      - in_parallel:
          - get: bosh-cli-docker-src
            trigger: true
          - get: golang-release-image
            trigger: true
      - task: write-metadata-file
        file: bosh-cli-docker-src/ci/docker/write-metadata-file.yml
      - put: bosh-cli-docker-image
        params:
          build: "docker-files"
          tag: "docker-files/tag"
        get_params:
          skip_download: true

  - name: bump-deps
    public: true
    plan:
      - get: weekly
        trigger: true
      - get: bosh-cli
      - get: golang-release
      - task: bump-deps
        file: golang-release/ci/tasks/shared/bump-deps.yml
        input_mapping:
          input_repo: bosh-cli
        output_mapping:
          output_repo: bumped-bosh-cli
      - task: test-unit
        input_mapping:
          bosh-cli: bumped-bosh-cli
        file: bosh-cli/ci/tasks/test-unit.yml
      - put: bosh-cli
        params:
          repository: bumped-bosh-cli

  - name: test-unit
    public: true
    plan:
      - get: bosh-cli
        trigger: true
      - in_parallel:
        - task: lint
          file: bosh-cli/ci/tasks/lint.yml
        - task: test-build-docs-example
          file: bosh-cli/ci/tasks/test-build-docs-example.yml
        - task: test-build
          file: bosh-cli/ci/tasks/test-build.yml
        - task: test-unit
          file: bosh-cli/ci/tasks/test-unit.yml

  - name: test-integration
    public: true
    plan:
      - get: bosh-cli
        trigger: true
      - task: test-integration
        file: bosh-cli/ci/tasks/test-integration.yml
        privileged: true

  - name: test-acceptance-xenial
    public: true
    plan:
      - in_parallel:
        - get: bosh-cli
          passed: [test-unit,test-integration]
          trigger: true
        - get: bosh-warden-cpi-release
          trigger: true
        - get: bosh-warden-stemcell-xenial
      - in_parallel:
        - task: test-acceptance
          file: bosh-cli/ci/tasks/test-acceptance.yml
          privileged: true

  - name: integration-postgres
    public: true
    serial: true
    build_logs_to_retain: 250
    plan:
      - in_parallel:
        - get: bosh-src
          trigger: true
        - get: version-semver
          params: {bump: patch}
        - get: bosh-cli
          passed: [test-unit,test-integration]
          trigger: true
        - get: bosh-agent
          trigger: true
        - get: integration-tests-parallel-runtime
        - get: config-server

      - task: build-linux-amd64
        file: bosh-cli/ci/tasks/build-linux-amd64.yml

      - task: tests
        privileged: true
        input_mapping:
          bosh-cli: compiled-linux-amd64
        file: bosh-src/ci/tasks/test-integration.yml
        params:
          DB: postgresql
          DB_VERSION: 15
          DB_TLS: true

  - name: pre-release-fan-in
    public: true
    serial: true
    plan:
      - get: bosh-cli
        trigger: true
        passed:
        - test-acceptance-xenial
        - integration-postgres

  - name: release-new-patch
    public: true
    plan:
      - get: bosh-cli
        passed:
        - pre-release-fan-in
      - put: version-semver
        params:
          bump: patch

  - name: release-new-minor
    public: true
    plan:
      - get: bosh-cli
        passed:
        - pre-release-fan-in
      - put: version-semver
        params:
          bump: minor

  - name: release-new-major
    public: true
    plan:
      - get: bosh-cli
        passed:
        - pre-release-fan-in
      - put: version-semver
        params:
          bump: major

  - name: automatically-release-new-patch
    serial: true
    plan:
    - in_parallel:
      - get: bosh-cli
        params:
          fetch_tags: true
        trigger: true
        passed:
        - pre-release-fan-in
      - get: golang-release
      - get: bosh-shared-ci
      - get: security-scanner-image
      - get: version-semver
      - get: ubuntu-image
      - get: release-bucket-linux
    - task: build-linux-amd64
      file: bosh-cli/ci/tasks/build-linux-amd64.yml
    - try:
        task: check-for-updated-binary-version
        file: golang-release/ci/tasks/shared/check-for-updated-binary-version.yml
        input_mapping:
          previous_binary: release-bucket-linux
          current_binary: compiled-linux-amd64
        params:
          PREVIOUS_BINARY_PATTERN: bosh-cli-*-linux-amd64
          CURRENT_BINARY_PATTERN: bosh-cli-*-linux-amd64
    - try:
        task: check-for-patched-cves
        file: bosh-shared-ci/tasks/release/check-for-patched-cves.yml
        image: security-scanner-image
        input_mapping:
          input_repo: bosh-cli
          version: version-semver
        params:
          SEVERITY: CRITICAL,HIGH
    - task: ensure-cve-checker-succeeded
      file: bosh-shared-ci/tasks/release/ensure-task-succeeded.yml
      image: ubuntu-image
      input_mapping:
        task-output-folder: patched_cves
    - try:
        task: check-needs-release
        config:
          platform: linux
          image_resource:
            type: docker-image
            source: {repository: alpine}
          inputs:
          - name: release-notes
          run:
            path: /bin/sh
            args:
            - -c
            - |
              if [ -f release-notes/needs-release ]; then
                echo "## Release Notes"
                echo "${release-notes/release-notes.md}"
                exit 0
              else
                echo "No release needed"
                exit 1
              fi
        on_success:
          do:
          - put: release-notes
            params:
              file: release-notes/release-notes.md
          - put: version-semver
            params:
              bump: patch

  - name: build
    public: true
    plan:
      - in_parallel:
        - get: bosh-cli
          passed:
           - pre-release-fan-in
        - get: version-semver
          trigger: true
        - get: release-notes
        - get: homebrew-tap
      - in_parallel:
        - task: build-linux-amd64
          file: bosh-cli/ci/tasks/build-linux-amd64.yml
        - task: build-linux-arm64
          file: bosh-cli/ci/tasks/build-linux-arm64.yml
        - task: build-darwin-amd64
          file: bosh-cli/ci/tasks/build-darwin-amd64.yml
        - task: build-darwin-arm64
          file: bosh-cli/ci/tasks/build-darwin-arm64.yml
        - task: build-windows-amd64
          file: bosh-cli/ci/tasks/build-windows-amd64.yml

      - task: build-checksum-file
        file: bosh-cli/ci/tasks/build-checksum-file.yml

      - task: create-dockerfile
        file: bosh-cli/ci/tasks/create-dockerfile.yml

      - {put: bosh-cli, params: {repository: bosh-cli, tag: version-semver/number, tag_prefix: v, only_tag: true }}

      - in_parallel:
        - {put: release-bucket-linux, params: {file: compiled-linux-amd64/bosh-cli-*-linux-amd64}}
        - {put: release-bucket-linux-arm64, params: {file: compiled-linux-arm64/bosh-cli-*-linux-arm64}}
        - {put: release-bucket-darwin, params: {file: compiled-darwin-amd64/bosh-cli-*-darwin-amd64}}
        - {put: release-bucket-darwin-arm64, params: {file: compiled-darwin-arm64/bosh-cli-*-darwin-arm64}}
        - {put: release-bucket-windows, params: {file: compiled-windows-amd64/bosh-cli-*-windows-amd64.exe}}

        - put: final-docker
          params:
            build: docker-assets
            tag: version-semver/number
            tag_as_latest: true

      - do:
        - task: prepare-version
          config:
            platform: linux
            image_resource:
              type: docker-image
              source: {repository: alpine}
            run:
              path: /bin/sh
              args:
              - -c
              - |
                echo -n "v" >> release-version/version
                cat version-semver/number >> release-version/version
            inputs:
            - name: version-semver
            outputs:
            - name: release-version
        - put: github-release
          params:
            name: release-version/version
            tag: release-version/version
            globs:
              - compiled-linux-amd64/bosh-cli-*-linux-amd64
              - compiled-linux-arm64/bosh-cli-*-linux-arm64
              - compiled-darwin-amd64/bosh-cli-*-darwin-amd64
              - compiled-darwin-arm64/bosh-cli-*-darwin-arm64
              - compiled-windows-amd64/bosh-cli-*-windows-amd64.exe
            body: checksums/checksums

      - task: update-homebrew-formula
        file: bosh-cli/ci/tasks/update-homebrew-formula.yml
      - put: homebrew-tap
        params:
          repository: update-brew-formula-output/homebrew-tap

  - name: clear-release-notes
    plan:
    - get: version-semver
      passed:
      - build
      trigger: true
    - get: golang-release
    - task: clear-release-notes
      file: golang-release/ci/tasks/shared/clear-release-notes.yml
    - put: release-notes
      params:
        file: release-notes/release-notes.md

  - name: build-alpha
    public: true
    plan:
      - in_parallel:
        - get: bosh-cli
          passed:
           - pre-release-fan-in
          trigger: true
        - get: alpha-version-semver
          params: {bump: patch}
      - {put: alpha-version-semver, params: {file: alpha-version-semver/number}}
      - in_parallel:
        - task: build-linux-amd64
          input_mapping: {version-semver: alpha-version-semver}
          file: bosh-cli/ci/tasks/build-linux-amd64.yml
          params:
            FILENAME_PREFIX: "alpha-"
        - task: build-linux-arm64
          input_mapping: {version-semver: alpha-version-semver}
          file: bosh-cli/ci/tasks/build-linux-arm64.yml
          params:
            FILENAME_PREFIX: "alpha-"
        - task: build-darwin-amd64
          input_mapping: {version-semver: alpha-version-semver}
          file: bosh-cli/ci/tasks/build-darwin-amd64.yml
          params:
            FILENAME_PREFIX: "alpha-"
        - task: build-darwin-arm64
          input_mapping: {version-semver: alpha-version-semver}
          file: bosh-cli/ci/tasks/build-darwin-arm64.yml
          params:
            FILENAME_PREFIX: "alpha-"
        - task: build-windows-amd64
          input_mapping: {version-semver: alpha-version-semver}
          file: bosh-cli/ci/tasks/build-windows-amd64.yml
          params:
            FILENAME_PREFIX: "alpha-"

      - in_parallel:
        - {put: alpha-release-bucket-linux-amd64, params: {file: compiled-linux-amd64/alpha-bosh-cli-*-linux-amd64}}
        - {put: alpha-release-bucket-linux-arm64, params: {file: compiled-linux-arm64/alpha-bosh-cli-*-linux-arm64}}
        - {put: alpha-release-bucket-darwin-amd64, params: {file: compiled-darwin-amd64/alpha-bosh-cli-*-darwin-amd64}}
        - {put: alpha-release-bucket-darwin-arm64, params: {file: compiled-darwin-arm64/alpha-bosh-cli-*-darwin-arm64}}
        - {put: alpha-release-bucket-windows-amd64, params: {file: compiled-windows-amd64/alpha-bosh-cli-*-windows-amd64.exe}}

  - name: test-helper-urls
    public: true
    plan:
      - in_parallel:
        - get: alpha-release-bucket-linux-amd64
          passed: [build-alpha]
        - get: bosh-cli
          passed: [build-alpha]
      - task: test-helper-urls
        file: bosh-cli/ci/tasks/test-helper-urls.yml

resources:
  - name: bosh-src
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh.git

  - name: bosh-agent
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-agent.git
      branch: main

  - name: bosh-cli
    type: git
    source:
      uri: git@github.com:cloudfoundry/bosh-cli.git
      branch: main
      private_key: ((github_deploy_key_bosh-cli.private_key))

  - name: bosh-cli-docker-src
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-cli.git
      branch: main
      private_key: ((github_deploy_key_bosh-cli.private_key))
      paths:
        - "ci/docker"

  - name: config-server
    type: git
    source:
      uri: git@github.com:cloudfoundry/config-server.git
      branch: develop
      private_key: ((github_deploy_key_config-server.private_key))

  - name: bosh-warden-stemcell-xenial
    type: bosh-io-stemcell
    source:
      name: bosh-warden-boshlite-ubuntu-xenial-go_agent

  - name: bosh-warden-cpi-release
    type: bosh-io-release
    source:
      repository: cppforlife/bosh-warden-cpi-release

  - name: golang-release
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-package-golang-release.git

  - name: bosh-shared-ci
    type: git
    source:
      uri: git@github.com:cloudfoundry/bosh-shared-ci.git
      private_key: ((github_deploy_key_bosh-shared-ci.private_key))

  - name: golang-release-image
    type: registry-image
    source:
      repository: bosh/golang-release
      username: ((bosh-dockerhub.username))
      password: ((bosh-dockerhub.password))

  - name: security-scanner-image
    type: registry-image
    source:
      repository: bosh/security-scanner
      username: ((bosh-dockerhub.username))
      password: ((bosh-dockerhub.password))

  - name: release-bucket-linux
    type: gcs-resource
    source:
      regexp: bosh-cli-(.*)-linux-amd64
      bucket: bosh-cli-artifacts
      json_key: ((bosh-cli/gcp_service_key_json))

  - name: release-bucket-linux-arm64
    type: gcs-resource
    source:
      regexp: bosh-cli-(.*)-linux-arm64
      bucket: bosh-cli-artifacts
      json_key: ((bosh-cli/gcp_service_key_json))

  - name: release-bucket-darwin
    type: gcs-resource
    source:
      regexp: bosh-cli-(.*)-darwin-amd64
      bucket: bosh-cli-artifacts
      json_key: ((bosh-cli/gcp_service_key_json))


  - name: release-bucket-darwin-arm64
    type: gcs-resource
    source:
      regexp: bosh-cli-(.*)-darwin-arm64
      bucket: bosh-cli-artifacts
      json_key: ((bosh-cli/gcp_service_key_json))

  - name: release-bucket-windows
    type: gcs-resource
    source:
      regexp: bosh-cli-(.*)-windows-amd64.exe
      bucket: bosh-cli-artifacts
      json_key: ((bosh-cli/gcp_service_key_json))

  - name: alpha-release-bucket-linux-amd64
    type: gcs-resource
    source:
      regexp: alpha-bosh-cli-(.*)-linux-amd64
      bucket: bosh-cli-alpha-artifacts
      json_key: ((bosh-cli/gcp_service_key_json))

  - name: alpha-release-bucket-linux-arm64
    type: gcs-resource
    source:
      regexp: alpha-bosh-cli-(.*)-linux-arm64
      bucket: bosh-cli-alpha-artifacts
      json_key: ((bosh-cli/gcp_service_key_json))

  - name: alpha-release-bucket-darwin-amd64
    type: gcs-resource
    source:
      regexp: alpha-bosh-cli-(.*)-darwin-amd64
      bucket: bosh-cli-alpha-artifacts
      json_key: ((bosh-cli/gcp_service_key_json))

  - name: alpha-release-bucket-darwin-arm64
    type: gcs-resource
    source:
      regexp: alpha-bosh-cli-(.*)-darwin-arm64
      bucket: bosh-cli-alpha-artifacts
      json_key: ((bosh-cli/gcp_service_key_json))

  - name: alpha-release-bucket-windows-amd64
    type: gcs-resource
    source:
      regexp: alpha-bosh-cli-(.*)-windows-amd64.exe
      bucket: bosh-cli-alpha-artifacts
      json_key: ((bosh-cli/gcp_service_key_json))

  - name: version-semver
    type: semver
    source:
      key: cli-current-version
      bucket: bosh-cli-artifacts
      driver: gcs
      json_key: ((bosh-cli/gcp_service_key_json))

  - name: alpha-version-semver
    type: semver
    source:
      key: cli-alpha-current-version
      bucket: bosh-cli-alpha-artifacts
      driver: gcs
      json_key: ((bosh-cli/gcp_service_key_json))

  - name: homebrew-tap
    type: git
    source:
      uri: git@github.com:cloudfoundry/homebrew-tap
      branch: master
      private_key: ((github_deploy_key_homebrew-tap.private_key))

  - name: github-release
    type: github-release
    source:
      owner: cloudfoundry
      repository: bosh-cli
      access_token: ((github_public_repo_token))

  - name: final-docker
    type: docker-image
    source:
      repository: bosh/cli2
      username: ((bosh-dockerhub.username))
      password: ((bosh-dockerhub.password))
      email: foo@bar.com

  - name: bosh-cli-docker-image
    type: docker-image
    source:
      repository: bosh/cli
      username: ((bosh-dockerhub.username))
      password: ((bosh-dockerhub.password))

  - name: ubuntu-image
    type: docker-image
    source:
      repository: ubuntu
      username: ((bosh-dockerhub.username))
      password: ((bosh-dockerhub.password))
      email: foo@bar.com

  - name: weekly
    type: time
    source:
      start: 3:00 -0700
      stop: 4:30 -0700
      days: [Saturday]

  - name: integration-tests-parallel-runtime
    type: gcs-resource
    source:
      bucket: bosh-cli-pipeline
      json_key: ((bosh-cli/gcp_service_key_json))
      versioned_file: "parallel_runtime_rspec.log"

  - name: release-notes
    type: gcs-resource
    source:
      bucket: bosh-cli-pipeline
      json_key: ((bosh-cli/gcp_service_key_json))
      versioned_file: bosh-cli/release-notes.md
      initial_version: "0"
      initial_content_text: ""

resource_types:
  - name: gcs-resource
    type: docker-image
    source:
      repository: frodenas/gcs-resource
      username: ((bosh-dockerhub.username))
      password: ((bosh-dockerhub.password))
  - name: github-status
    type: docker-image
    source:
      repository: dpb587/github-status-resource
      tag: master
  - name: semver
    type: docker-image
    source:
      repository: concourse/semver-resource
      tag: 1.6
